@mixin transform($property) {
  -webkit-transform: $property;
  -moz-transform: $property;
  -ms-transform: $property;
  -o-transform: $property;
  transform: $property;
}

@mixin rotate ($r: 90deg) {
  -webkit-transform: rotate($r);
  -moz-transform: rotate($r);
  -ms-transform: rotate($r);
  -o-transform: rotate($r);
  transform: rotate($r);
}

@mixin rotateY ($y: 180deg) {
  -webkit-transform: rotateY($y);
  -moz-transform: rotateY($y);
  -ms-transform: rotateY($y);
  -o-transform: rotateY($y);
  transform: rotateY($y);
}

@mixin rotateX ($x: 180deg) {
  -webkit-transform: rotateX($x);
  -moz-transform: rotateX($x);
  -ms-transform: rotateX($x);
  -o-transform: rotateX($x);
  transform: rotateX($x);
}

@mixin transition($property: all, $duration: 0.2s, $timing: ease-in-out, $delay: 0s) {
  -moz-transition-property: $property;
  -webkit-transition-property: $property;
  transition-property: $property;
  -moz-transition-duration: $duration;
  -webkit-transition-duration: $duration;
  transition-duration: $duration;
  -moz-transition-timing-function: $timing;
  -webkit-transition-timing-function: $timing;
  transition-timing-function: $timing;
  -moz-transition-delay: $delay;
  -webkit-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin translate ($x: -50%, $y: -50%) {
  -webkit-transform: translate($x $y);
  -moz-transform: translate($x $y);
  -ms-transform: translate($x $y);
  -o-transform: translate($x $y);
  transform: translate($x $y);
}

@mixin translateX ($x: -50%) {
  -webkit-transform: translateX($x);
  -moz-transform: translateX($x);
  -ms-transform: translateX($x);
  -o-transform: translateX($x);
  transform: translateX($x);
}

@mixin translateY ($y: -50%) {
  -webkit-transform: translateY($y);
  -moz-transform: translateY($y);
  -ms-transform: translateY($y);
  -o-transform: translateY($y);
  transform: translateY($y);
}

@mixin center ($position: absolute, $top: 50%, $left: 50%, $x: -50%, $y: -50%) {
  position: $position;
  top: $top;
  left: $left;
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin centerX ($position: absolute, $left: 50%, $x: -50%) {
  position: $position;
  left: $left;
  -webkit-transform: translateX($x);
  -moz-transform: translateX($x);
  -ms-transform: translateX($x);
  -o-transform: translateX($x);
  transform: translateX($x);
}

@mixin centerY ($position: absolute, $top: 50%, $y: -50%) {
  position: $position;
  top: $top;
  -webkit-transform: translateY($y);
  -moz-transform: translateY($y);
  -ms-transform: translateY($y);
  -o-transform: translateY($y);
  transform: translateY($y);
}

@mixin radius($r: 5px) {
  -webkit-border-radius: $r;
  -moz-border-radius: $r;
  border-radius: $r;
}

@mixin radius-top($r: 5px) {
  -webkit-border-top-left-radius: $r;
  border-top-left-radius: $r;
  -webkit-border-top-right-radius: $r;
  border-top-right-radius: $r;
}

@mixin radius-bottom($r: 5px) {
  -webkit-border-bottom-right-radius: $r;
  border-bottom-right-radius: $r;
  -webkit-border-bottom-left-radius: $r;
  border-bottom-left-radius: $r;
}

@mixin radius-tl($r: 5px) {
  -webkit-border-top-left-radius: $r;
  border-top-left-radius: $r;
}

@mixin radius-tr($r: 5px) {
  -webkit-border-top-right-radius: $r;
  border-top-right-radius: $r;
}

@mixin radius-br($r: 5px) {
  -webkit-border-bottom-right-radius: $r;
  border-bottom-right-radius: $r;
}

@mixin radius-bl($r: 5px) {
  -webkit-border-bottom-left-radius: $r;
  border-bottom-left-radius: $r;
}

@mixin backface-visibility($v: hidden) {
  -webkit-backface-visibility: $v;
  -moz-backface-visibility: $v;
  backface-visibility: $v;
}

@mixin box-shadow($hoff: 0, $voff: 10px, $blur: 40px, $spread: 20px, $color: rgba(0,0,0,.2)){
  -webkit-box-shadow: $hoff $voff $spread $blur $color;
  -moz-box-shadow: $hoff $voff $spread $blur $color;
  box-shadow: $hoff $voff $blur $spread $color;
}

@mixin box-shadow-in($hoff: 0, $voff: 0, $blur: 5px, $spread: 2px, $color: rgba(0, 123, 255, .5)){
  -webkit-box-shadow: inset $hoff $voff $spread $blur $color;
  -moz-box-shadow: inset $hoff $voff $spread $blur $color;
  box-shadow: inset $hoff $voff $blur $spread $color;
}

@mixin mycaret($direction: down) {

  @if $direction == 'up' {
    display: inline-block;
    width: 0;
    height: 0;
    margin-left: 0.255em;
    vertical-align: 0.255em;
    content: "";
    border-top: 0;
    border-right: 0.4em solid transparent;
    border-bottom: 0.4em solid;
    border-left: 0.4em solid transparent;
  } @else if $direction == 'left' {
    display: inline-block;
    width: 0;
    height: 0;
    margin-left: 0.255em;
    vertical-align: 0;
    content: "";
    border-top: 0.4em solid transparent;
    border-right: 0.4em solid;
    border-bottom: 0.4em solid transparent;
    border-left: 0;
  } @else if $direction == 'right' {
    display: inline-block;
    width: 0;
    height: 0;
    margin-left: 0.255em;
    vertical-align: 0;
    content: "";
    border-top: 0.4em solid transparent;
    border-right: 0;
    border-bottom: 0.4em solid transparent;
    border-left: 0.4em solid;
  } @else {
    display: inline-block;
    width: 0;
    height: 0;
    margin-left: 0.255em;
    vertical-align: 0.255em;
    content: "";
    border-top: 0.4em solid;
    border-right: 0.4em solid transparent;
    border-bottom: 0;
    border-left: 0.4em solid transparent;
  }
}

@mixin animation($name: all, $duration: 3s, $timing: ease-out, $delay: 0s, $iteration: 1, $direction: normal) {
  animation-name: $name;
  animation-duration: $duration;
  animation-timing-function: $timing;
  animation-delay: $delay;
  animation-iteration-count: $iteration;
  animation-direction: $direction;
}